# $Id$
# Maintainer: Ido Rosen <ido@kernel.org>
# Contributor: Evan Teitelman <teitelmanevan@gmail.com>
# Contributor: Eric Renfro <erenfro@gmail.com>
# Contributor: Alexander RÃ¸dseth <rodseth@gmail.com>
# Contributor: Marti Raudsepp <marti@juffo.org>
# Contributor: Sandman <the0sandman@hotmail.com>
# Contributor: raw <spam@rw23.de>
# Contributor: Dave Simons <miouhpi@gmail.com>
# Contributor: David Anderson <dave@natulte.net>
# Contributor: Joe Julian <me@joejulian.name>
# Contributor: Emil Renner Berthing <esmil@mailme.dk>
#
# NOTE: To request changes to this package, please submit a pull request
#       to the GitHub repository at https://github.com/ido/packages-archlinux
#       Otherwise, open a GitHub issue.  Thank you! -Ido
#

pkgname=ceph
pkgver=0.87.1
pkgrel=1
pkgdesc='Distributed, fault-tolerant file system delivering object, block, and file storage in one unified system.'
arch=('x86_64' 'i686')
url='http://ceph.com/'
license=('GPL')
depends=('libedit' 'libsigc++' 'gtkmm' 'btrfs-progs' 'crypto++'
         'gperftools>=1.8.3-2' 'python2' 'fuse' 'keyutils'
         'libatomic_ops' 'curl' 'libaio' 'fcgi' 'expat' 'boost'
         'leveldb' 'xfsprogs')
makedepends=('boost' 'boost-libs' 'yasm')
install=ceph.install
options=('!libtool' 'emptydirs')
source=("http://ceph.com/download/$pkgname-$pkgver.tar.bz2"
        "ceph-osd@.service"
        "ceph-mon@.service"
        "ceph-mds@.service"
        "ceph.install")
sha256sums=('a9a68ed58571af20fbbd7be4227dc71f5176eeb0713707ba3d8fddc00972b007'
            '29483c0f6718e8830cf52c0d31e391fb52dc1b460bcb65cf9c72dfab83e5b5ce'
            'a50811ce62fd6cdcc17d8f1e4d9700c1889ab4bfc5e9a22155bd725a27715e3c'
            'b8239a04cc42e3e4ced2e141df6804e61e875131a5c95d6bcbfc3b44f388d44b'
            'c1669b2bedc07a313b8bd29735296791abc0fd94eb353c9683b6015f2cc2c93c')

prepare() {
  cd "$srcdir/$pkgname-$pkgver"
  # fix python scripts to use python2
  find . -type f -exec sed -i 's,^#!/usr/bin/env python$,#!/usr/bin/env python2,g' {} \;

  # run setup.py script with python2
  find . -type f -exec sed -i 's,python setup.py,python2 setup.py,g' {} \;
}

build() {
  cd "$srcdir/$pkgname-$pkgver"

  LIBS="-lpthread -lboost_system" PYTHON=/usr/bin/python2 LDFLAGS="" ./configure \
    --prefix=/usr \
    --sbindir=/usr/bin \
    --libexecdir=/usr/lib \
    --sysconfdir=/etc \
    --localstatedir=/var \
    --with-radosgw

  make
}

package() {
  cd "$srcdir/$pkgname-$pkgver"

  make DESTDIR="$pkgdir" install

  install -dm755 "$pkgdir/var/run/ceph" "$pkgdir/var/log/ceph" \
    "$pkgdir/etc/rc.d" "$pkgdir/etc/ceph"

  # Systemd.
  install -dm755 "$pkgdir/usr/lib/systemd/system"
  install -Dm644 "$srcdir/ceph-osd@.service" "$pkgdir/usr/lib/systemd/system/ceph-osd@.service"
  install -Dm644 "$srcdir/ceph-mon@.service" "$pkgdir/usr/lib/systemd/system/ceph-mon@.service"
  install -Dm644 "$srcdir/ceph-mds@.service" "$pkgdir/usr/lib/systemd/system/ceph-mds@.service"
  install -Dm755 "src/init-ceph" "$pkgdir/etc/rc.d/ceph"

  # Ceph udev rules.
  install -Dm644 "udev/50-rbd.rules" "$pkgdir/usr/lib/udev/rules.d/50-rbd.rules"
  install -Dm644 "udev/60-ceph-partuuid-workaround.rules" \
    "$pkgdir/usr/lib/udev/rules.d/60-ceph-partuuid-workaround.rules"
  install -Dm644 "udev/95-ceph-osd-alt.rules" "$pkgdir/usr/lib/udev/rules.d/95-ceph-osd.rules"

  # Fix bin directory.
  mv "$pkgdir/sbin/"* "$pkgdir/usr/bin"
  rmdir "$pkgdir/sbin"

  # Sample config.
  install -Dm644 "$pkgdir/usr/share/doc/ceph/sample.ceph.conf" \
    "$pkgdir/etc/ceph/ceph.conf.sample"

  # License.
  install -Dm644 COPYING \
    "$pkgdir/usr/share/licenses/$pkgname/COPYING"

  # Clean up.
  rm -rf "$pkgdir/var/run"
}
